[{"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\index.js":"1","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\App.js":"2","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\index.js":"3","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\store.js":"4","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\reducers\\index.js":"5","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\reducers\\tablesReducer.js":"6","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\action-types\\index.js":"7","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\Header.js":"8","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\muiTheme.js":"9","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\SideMenu.js":"10","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\routes\\Routes.js":"11","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\HeaderContents.js":"12","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Mail.js":"13","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\helpers\\asideMenus.js":"14","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Dashboard.js":"15","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Hcps.js":"16","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Financetable.js":"17","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\ViewHCP.js":"18","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Patients.js":"19","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Consultations.js":"20","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\HCP.js":"21","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\CaseNotes.js":"22","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Medications.js":"23","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\MedicalRecords.js":"24","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\PatientProfile.js":"25","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Appointments.js":"26","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Prescriptions.js":"27","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\SinglePatient.js":"28","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\HeaderProfile.js":"29","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\helpers\\isSelected.js":"30","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\helpers\\selectedRows.js":"31","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\EnhancedTable.js":"32","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\CustomButton.js":"33","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\tableHeaders.js":"34","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Texts.js":"35","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\hooks\\useActions.js":"36","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Search.js":"37","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\FilterList.js":"38","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\DataHeader.js":"39","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Card.js":"40","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\PreviousButton.js":"41","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\modals\\ReferPatient.js":"42","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\EnhancedTableToolbar.js":"43","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\EnhancedTableHeader.js":"44","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\FormSelect.js":"45","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\action-creators\\index.js":"46","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\tableData.js":"47","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\action-creators\\tablesActions.js":"48","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Button.js":"49","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\DataGrid.js":"50","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\WaitingListTable.js":"51","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\AvailabilityTable.js":"52","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\DashboardChart.js":"53","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Filter.js":"54","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Email.js":"55","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\MainFinanceTab.js":"56","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\DateComponent.js":"57","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\CircularProgress.js":"58","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Payout.js":"59","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\ReferralTab.js":"60","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Subscription.js":"61","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Modal.js":"62","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\ViewReferral.js":"63","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Settings.js":"64","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Administrator.js":"65","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Management.js":"66"},{"size":279,"mtime":1632317878861,"results":"67","hashOfConfig":"68"},{"size":1185,"mtime":1633424664346,"results":"69","hashOfConfig":"68"},{"size":38,"mtime":1632317878863,"results":"70","hashOfConfig":"68"},{"size":296,"mtime":1632317878875,"results":"71","hashOfConfig":"68"},{"size":198,"mtime":1633042174680,"results":"72","hashOfConfig":"68"},{"size":763,"mtime":1633351042367,"results":"73","hashOfConfig":"68"},{"size":180,"mtime":1633350902672,"results":"74","hashOfConfig":"68"},{"size":833,"mtime":1632321889024,"results":"75","hashOfConfig":"68"},{"size":2547,"mtime":1633385265824,"results":"76","hashOfConfig":"68"},{"size":4672,"mtime":1633385265792,"results":"77","hashOfConfig":"68"},{"size":3406,"mtime":1633557295336,"results":"78","hashOfConfig":"68"},{"size":4544,"mtime":1632970651599,"results":"79","hashOfConfig":"68"},{"size":2440,"mtime":1633155453514,"results":"80","hashOfConfig":"68"},{"size":1599,"mtime":1632970651599,"results":"81","hashOfConfig":"68"},{"size":625,"mtime":1633042174643,"results":"82","hashOfConfig":"68"},{"size":2035,"mtime":1633123045108,"results":"83","hashOfConfig":"68"},{"size":6179,"mtime":1633119892856,"results":"84","hashOfConfig":"68"},{"size":8929,"mtime":1633447893604,"results":"85","hashOfConfig":"68"},{"size":7477,"mtime":1633600179811,"results":"86","hashOfConfig":"68"},{"size":7064,"mtime":1633385265824,"results":"87","hashOfConfig":"68"},{"size":6649,"mtime":1633551186128,"results":"88","hashOfConfig":"68"},{"size":7708,"mtime":1633385265824,"results":"89","hashOfConfig":"68"},{"size":4831,"mtime":1633385265848,"results":"90","hashOfConfig":"68"},{"size":6450,"mtime":1633385265832,"results":"91","hashOfConfig":"68"},{"size":9135,"mtime":1633385265856,"results":"92","hashOfConfig":"68"},{"size":1982,"mtime":1633385266304,"results":"93","hashOfConfig":"68"},{"size":3687,"mtime":1633385265856,"results":"94","hashOfConfig":"68"},{"size":6043,"mtime":1633385265856,"results":"95","hashOfConfig":"68"},{"size":2074,"mtime":1632317878855,"results":"96","hashOfConfig":"68"},{"size":82,"mtime":1633042174676,"results":"97","hashOfConfig":"68"},{"size":683,"mtime":1633042174676,"results":"98","hashOfConfig":"68"},{"size":3691,"mtime":1633385265784,"results":"99","hashOfConfig":"68"},{"size":1357,"mtime":1633424894114,"results":"100","hashOfConfig":"68"},{"size":3704,"mtime":1633600666155,"results":"101","hashOfConfig":"68"},{"size":2752,"mtime":1632915160333,"results":"102","hashOfConfig":"68"},{"size":450,"mtime":1633042174585,"results":"103","hashOfConfig":"68"},{"size":1545,"mtime":1632915160294,"results":"104","hashOfConfig":"68"},{"size":2612,"mtime":1633123045045,"results":"105","hashOfConfig":"68"},{"size":18141,"mtime":1633600542106,"results":"106","hashOfConfig":"68"},{"size":1148,"mtime":1633553421740,"results":"107","hashOfConfig":"68"},{"size":752,"mtime":1633385265762,"results":"108","hashOfConfig":"68"},{"size":5510,"mtime":1633385265808,"results":"109","hashOfConfig":"68"},{"size":1800,"mtime":1633042174596,"results":"110","hashOfConfig":"68"},{"size":2018,"mtime":1633385265784,"results":"111","hashOfConfig":"68"},{"size":1599,"mtime":1633385265762,"results":"112","hashOfConfig":"68"},{"size":71,"mtime":1633042174677,"results":"113","hashOfConfig":"68"},{"size":4970,"mtime":1633385265762,"results":"114","hashOfConfig":"68"},{"size":570,"mtime":1633351029980,"results":"115","hashOfConfig":"68"},{"size":1387,"mtime":1633046108475,"results":"116","hashOfConfig":"68"},{"size":4050,"mtime":1633123045045,"results":"117","hashOfConfig":"68"},{"size":4842,"mtime":1633042174597,"results":"118","hashOfConfig":"68"},{"size":4315,"mtime":1633385265776,"results":"119","hashOfConfig":"68"},{"size":24444,"mtime":1633385265776,"results":"120","hashOfConfig":"68"},{"size":7344,"mtime":1632490888295,"results":"121","hashOfConfig":"68"},{"size":6911,"mtime":1633103998675,"results":"122","hashOfConfig":"68"},{"size":6218,"mtime":1633602267918,"results":"123","hashOfConfig":"68"},{"size":1006,"mtime":1633296212545,"results":"124","hashOfConfig":"68"},{"size":956,"mtime":1633341781179,"results":"125","hashOfConfig":"68"},{"size":6921,"mtime":1633120583998,"results":"126","hashOfConfig":"68"},{"size":8237,"mtime":1633554651118,"results":"127","hashOfConfig":"68"},{"size":10833,"mtime":1633559747243,"results":"128","hashOfConfig":"68"},{"size":852,"mtime":1633447301561,"results":"129","hashOfConfig":"68"},{"size":7355,"mtime":1633446661283,"results":"130","hashOfConfig":"68"},{"size":2262,"mtime":1633556823295,"results":"131","hashOfConfig":"68"},{"size":7647,"mtime":1633595923974,"results":"132","hashOfConfig":"68"},{"size":11668,"mtime":1633603127356,"results":"133","hashOfConfig":"68"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},"1haj5qw",{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"139","usedDeprecatedRules":"136"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"142","messages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"144","messages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"146","messages":"147","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"154","messages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"136"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"159","messages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":4,"source":"172","usedDeprecatedRules":"136"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"136"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"136"},{"filePath":"183","messages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"193","usedDeprecatedRules":"136"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"196","messages":"197","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"136"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"207","messages":"208","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"215","messages":"216","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"217","messages":"218","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"221","messages":"222","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"223","messages":"224","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"225","messages":"226","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"229","messages":"230","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"231","messages":"232","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"237","messages":"238","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"239","messages":"240","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"241","messages":"242","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"243","messages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"245","messages":"246","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"249","messages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"163"},{"filePath":"251","messages":"252","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"253","usedDeprecatedRules":"136"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"258","messages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"260","messages":"261","errorCount":0,"fatalErrorCount":0,"warningCount":31,"fixableErrorCount":0,"fixableWarningCount":21,"source":"262","usedDeprecatedRules":"136"},{"filePath":"263","messages":"264","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"265","usedDeprecatedRules":"136"},{"filePath":"266","messages":"267","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"268","usedDeprecatedRules":"136"},{"filePath":"269","messages":"270","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"136"},{"filePath":"271","messages":"272","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"273","usedDeprecatedRules":"136"},{"filePath":"274","messages":"275","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"276","usedDeprecatedRules":"136"},{"filePath":"277","messages":"278","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"279","messages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\index.js",[],[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\App.js",["281"],"import React, { useState } from \"react\";\r\nimport { ThemeProvider } from \"@mui/material/styles\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { muiTheme } from \"components/muiTheme\";\r\nimport Header from \"components/layouts/Header\";\r\nimport SideMenu from \"components/layouts/SideMenu\";\r\nimport Routes from \"components/routes/Routes\";\r\n\r\n\r\nconst sectionStyles = {\r\n  paddingLeft: \"39rem\",\r\n  paddingRight: \"5rem\",\r\n  paddingTop: \"12rem\",\r\n  paddingBottom: \"5rem\",\r\n  minHeight: \"100vh\",\r\n  width: \"100%\",\r\n  backgroundColor: \"#fbfbfb\",\r\n};\r\n\r\nconst App = () => {\r\n  const [selectedMenu, setSelectedMenu] = useState(0);\r\n  return (\r\n    <ThemeProvider theme={muiTheme}>\r\n      <Router>\r\n        <div className=\"container\">\r\n          <Header selectedMenu={selectedMenu} />\r\n          <main style={{ display: \"flex\" }}>\r\n            <SideMenu selectedMenu={selectedMenu} setSelectedMenu={setSelectedMenu} />\r\n            <section style={sectionStyles}>\r\n              <Routes setSelectedMenu={setSelectedMenu} />\r\n            </section>\r\n          </main>\r\n        </div>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\store.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\reducers\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\reducers\\tablesReducer.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\action-types\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\Header.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\muiTheme.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\SideMenu.js",["282"],"import React, { useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport { menus } from \"helpers/asideMenus\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport logo from \"assets/images/logo.png\";\r\nimport { Link, useParams, useLocation } from \"react-router-dom\";\r\nimport { HiLogout } from \"react-icons/hi\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  aside: {\r\n    width: \"34rem\",\r\n    background: \"#fff\",\r\n    paddingLeft: \"2.5em\",\r\n    paddingRight: \"2.5em\",\r\n    paddingTop: \"5em\",\r\n    height: \"100vh\",\r\n    boxShadow: \"5px -5px 7px #eee\",\r\n    position: \"fixed\",\r\n    overflowY: \"hidden\",\r\n    zIndex: theme.zIndex.appBar + 1,\r\n\r\n    \"&:hover\": {\r\n      overflowY: \"scroll\",\r\n    },\r\n\r\n    \"& .MuiListItemButton-root\": {\r\n      marginBottom: \"2em\",\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.common.lightRed,\r\n\r\n        \"& .MuiSvgIcon-root\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n\r\n        \"& .MuiTypography-root\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n\r\n        \"& .message-icon\": {\r\n          color: theme.palette.common.red,\r\n        },\r\n      },\r\n    },\r\n\r\n    \"& .MuiListItemIcon-root\": {\r\n      minWidth: 50,\r\n    },\r\n\r\n    \"& .MuiSvgIcon-root\": {\r\n      fontSize: \"2rem\",\r\n\r\n      \"&:hover\": {\r\n        color: theme.palette.common.red,\r\n      },\r\n    },\r\n\r\n    \"& .MuiTypography-root\": {\r\n      fontSize: \"1.45rem\",\r\n    },\r\n\r\n    \"& .MuiListItemButton-root.Mui-selected\": {\r\n      backgroundColor: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n      borderRadius: \".5rem\",\r\n\r\n      \"&:hover\": {\r\n        backgroundColor: theme.palette.common.lightRed,\r\n      },\r\n\r\n      \"& .MuiListItemIcon-root\": {\r\n        color: theme.palette.common.red,\r\n      },\r\n\r\n      \"& .MuiTypography-root\": {\r\n        color: theme.palette.common.red,\r\n      },\r\n    },\r\n\r\n    \"&::-webkit-scrollbar\": {\r\n      width: \".85rem\",\r\n    },\r\n\r\n    \"&::-webkit-scrollbar-track\": {\r\n      boxShadow: \"inset 0 0 1rem rgba(0, 0, 0, 0.2)\",\r\n    },\r\n\r\n    \"&::-webkit-scrollbar-thumb\": {\r\n      borderRadius: \".5rem\",\r\n      background: theme.palette.common.lightGrey,\r\n    },\r\n  },\r\n  logoWrapper: {\r\n    paddingTop: \"3em\",\r\n    paddingBottom: \"5em\",\r\n    paddingLeft: \"7em\",\r\n  },\r\n  logout: {\r\n    \"&.MuiListItemButton-root\": {\r\n      marginTop: \"2.5rem\",\r\n\r\n      \"& .MuiListItemIcon-root\": {\r\n        color: theme.palette.common.red,\r\n      },\r\n\r\n      \"& .MuiTypography-root\": {\r\n        color: theme.palette.common.red,\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst SideMenu = ({ selectedMenu, setSelectedMenu }) => {\r\n  const classes = useStyles();\r\n\r\n  const { patientId } = useParams();\r\n  const location = useLocation();\r\n\r\n  console.log(patientId);\r\n\r\n  useEffect(() => {\r\n    [...menus].filter((menu) => {\r\n      switch (location.pathname) {\r\n        case menu.path:\r\n          if (menu.id !== selectedMenu) {\r\n            setSelectedMenu(menu.id);\r\n          }\r\n          break;\r\n        case `/patients/${patientId}`:\r\n          setSelectedMenu(1);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    });\r\n  }, [selectedMenu, setSelectedMenu]);\r\n\r\n  return (\r\n    <aside className={classes.aside}>\r\n      <div className={classes.logoWrapper}>\r\n        <img src={logo} alt=\"logo\" />\r\n      </div>\r\n      <List>\r\n        {menus.map((menu) => (\r\n          <ListItemButton\r\n            disableRipple\r\n            key={menu.id}\r\n            onClick={() => setSelectedMenu(menu.id)}\r\n            selected={selectedMenu === menu.id}\r\n            component={Link}\r\n            to={menu.path}\r\n          >\r\n            <ListItemIcon>\r\n              {React.createElement(\r\n                menu.icon,\r\n                menu.id === 5 ? { size: 20, className: \"message-icon\" } : {},\r\n              )}\r\n            </ListItemIcon>\r\n\r\n            <ListItemText>{menu.title}</ListItemText>\r\n          </ListItemButton>\r\n        ))}\r\n        <ListItemButton\r\n          disableRipple\r\n          onClick={() => setSelectedMenu(12)}\r\n          classes={{ root: classes.logout }}\r\n          // component={Link}\r\n        >\r\n          <ListItemIcon>\r\n            <HiLogout size={20} />\r\n          </ListItemIcon>\r\n\r\n          <ListItemText>Logout</ListItemText>\r\n        </ListItemButton>\r\n      </List>\r\n    </aside>\r\n  );\r\n};\r\n\r\nSideMenu.propTypes = {\r\n  selectedMenu: PropTypes.number.isRequired,\r\n  setSelectedMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SideMenu;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\routes\\Routes.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\HeaderContents.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Mail.js",[],[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\helpers\\asideMenus.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Dashboard.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Hcps.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Financetable.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296"],"import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport DownloadSharpIcon from \"@mui/icons-material/DownloadSharp\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { rows } from \"components/Utilities/DataHeader\";\r\nimport { financeHeader } from \"components/Utilities/tableHeaders\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport { H1 } from \"components/Utilities/Texts\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Plan\" },\r\n  { id: 2, value: \"Consultation\" },\r\n];\r\n\r\nconst Financetable = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const buttonType = {\r\n    main: theme.palette.success.main,\r\n    light: theme.palette.success.light,\r\n    dark: theme.palette.success.dark,\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n      <H1 fontSize=\"3.2rem\" color=\"#4F4F4F\" style={{ marginRight: \"1rem\" }}>\r\n          Earnings table\r\n        </H1>\r\n      </Grid>\r\n      {/* The Search and Filter ends here */}\r\n      <Grid item container>\r\n        <EnhancedTable\r\n          headCells={financeHeader}\r\n          rows={rows}\r\n          page={page}\r\n          paginationLabel=\"finance per page\"\r\n          hasCheckbox={true}\r\n        >\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n            const isItemSelected = isSelected(row.id, selectedRows);\r\n\r\n            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n            return (\r\n              <TableRow\r\n                hover\r\n                role=\"checkbox\"\r\n                aria-checked={isItemSelected}\r\n                tabIndex={-1}\r\n                key={row.id}\r\n                selected={isItemSelected}\r\n              >\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    onClick={() => handleSelectedRows(row.id, selectedRows, setSelectedRows)}\r\n                    color=\"primary\"\r\n                    checked={isItemSelected}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": labelId,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black }}\r\n                >\r\n                  {row.entryDate}\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black,  }}\r\n                >\r\n                  {row.time}\r\n                </TableCell>\r\n                   <TableCell align=\"center\" className={classes.tableCell}>\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                  \r\n                    }}\r\n                  >\r\n                    <span style={{ marginRight: \"1rem\" }}>\r\n                      <Avatar alt=\"Remy Sharp\" src={displayPhoto} sx={{ width: 24, height: 24 }} />\r\n                    </span>\r\n                    <span style={{ fontSize: \"1.25rem\" }}>\r\n                      {row.firstName} {row.lastName}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tableCell}>\r\n                  {row.planName}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.red }}\r\n                >\r\n                  {row.amount}\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </EnhancedTable>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Financetable;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\ViewHCP.js",["297","298","299","300","301","302","303","304","305"],"import { AppBar, Avatar, Grid, Typography } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport clock from \"assets/images/clock.svg\";\r\nimport date from \"assets/images/date.svg\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport imageUpload from \"assets/images/imageUpload.svg\";\r\nimport threeDot from \"assets/images/threeDot.svg\";\r\nimport IconLabelButtons from \"components/Utilities/Button\";\r\nimport DoneSharpIcon from \"@mui/icons-material/DoneSharp\";\r\n\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nconst gender = \"Female\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  containerGrid: {\r\n    background: \"#fbfbfb !important \",\r\n    color: \"black !important\",\r\n    marginLeft: 0,\r\n  },\r\n  lightGreen: {\r\n    color: theme.palette.common.green,\r\n  },\r\n\r\n  lightRed: {\r\n    color: theme.palette.common.red,\r\n  },\r\n  firstGrid: {\r\n    display: \"flex\",\r\n    // marginRight: \"6.3rem\",\r\n    justifyContent: \"flex-start\",\r\n    alignItems: \"center\",\r\n    fontSize: \"1.6rem\",\r\n    lineHeight: \"2.4rem\",\r\n    paddingLeft: \"6.3rem\",\r\n  },\r\n  imageGrid: {\r\n    width: \"2.4rem\",\r\n    height: \"2.4rem\",\r\n    background: \" #FEF8F7\",\r\n    borderRadius: \".5rem\",\r\n    display: \"grid\",\r\n    placeContent: \"center\",\r\n  },\r\n  center: {\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  \"img .MuiAvatar-img.css-1pqm26d-MuiAvatar-img\": {\r\n    width: \"1rem\",\r\n    \"& img\": {\r\n      objectFit: \"contain\",\r\n      width: \"30%\",\r\n    },\r\n    \".css-1pqm26d-MuiAvatar-img\": {\r\n      objectFit: \"contain\",\r\n      width: \"30%\",\r\n      height: \"30%\",\r\n    },\r\n  },\r\n  date: {\r\n    background: \"#FEF8F7\",\r\n    // width: \"2.4rem\",\r\n  },\r\n  spacing: {\r\n    margin: \"0 !important\",\r\n    width: \"100% !important\",\r\n  },\r\n  parentGrid: {\r\n    marginTop: \"4.6rem\",\r\n    borderRadius: \"2rem\",\r\n    maxWidth: \"94.6rem\",\r\n    background: \"white\",\r\n    overflow: \"hidden\",\r\n    boxShadow: \"-1px 0px 10px -2px rgba(0,0,0,0.15)\",\r\n    \"& > *\": {\r\n      borderBottom: \".5px solid #F8F8F8\",\r\n      padding: \" 0 0 0 6.3rem !important\",\r\n      minHeight: \"8.3rem\",\r\n      \"&:hover\": {\r\n        background: \"#fafafa\",\r\n        cursor: \"pointer\",\r\n      },\r\n      \"&:last-child\": {\r\n        borderBottom: \"none\",\r\n      },\r\n    },\r\n  },\r\n}));\r\n\r\nconst ViewHCP = () => {\r\n  const theme = useTheme();\r\n  const imageuploadContainer = [\r\n    {\r\n      value: \"74.89KB, \",\r\n      time: \"Oct 17\",\r\n      text: \"X-ray Scan Result\",\r\n    },\r\n    {\r\n      value: \"74.89KB, \",\r\n      time: \"Oct 17\",\r\n      text: \"X-ray Scan Result\",\r\n    },\r\n    {\r\n      value: \"74.89KB\",\r\n      time: \"Oct 17\",\r\n      text: \"X-ray Scan Result\",\r\n    },\r\n    {\r\n      value: \"74.89KB, \",\r\n      time: \"Oct 17\",\r\n      text: \"X-ray Scan Result\",\r\n    },\r\n    {\r\n      value: \"74.89KB, \",\r\n      time: \"Oct 17\",\r\n      text: \"X-ray Scan Result\",\r\n    },\r\n    {\r\n      value: \"74.89KB\",\r\n      time: \"Oct 17\",\r\n      text: \"X-ray Scan Result\",\r\n    },\r\n  ];\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid position=\"static\" className={classes.containerGrid}>\r\n      <Grid component=\"div\">\r\n        <Typography variant=\"h1\"> HCP view</Typography>\r\n      </Grid>\r\n\r\n      <Grid container className={classes.parentGrid}>\r\n        <Grid item container className={classes.firstGrid} component=\"row\">\r\n          <Grid container sx={{ maxWidth: \"40%\" }}>\r\n            <Grid\r\n              item\r\n              sm\r\n              container\r\n              sx={{ justifyContent: \"space-between\", alignItems: \"center\", minWidth: \"60%\" }}\r\n            >\r\n              <Grid item>\r\n                <Typography variant=\"h6\" color=\"text.secondary\">\r\n                  Date:\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item className={classes.imageGrid}>\r\n                <img src={date} alt=\"A clock icon\" />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h6\">7,July 2021</Typography>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            <Grid item sm container sx={{ justifyContent: \"space-around\", alignItems: \"center\" }}>\r\n              <Grid item className={classes.imageGrid}>\r\n                <img src={clock} className={classes.date} alt=\"A time icon \" />\r\n              </Grid>\r\n              <Grid item>\r\n                <Typography variant=\"h6\" component=\"span\">\r\n                  3:30PM\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* second grid */}\r\n        <Grid container spacing={2}>\r\n          <Grid item sm container xs={5} spacing={2} sx={{ alignItems: \"center\" }}>\r\n            <Grid item>\r\n              <Typography variant=\"h6\" color=\"text.secondary\">\r\n                Patient:\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Avatar src={displayPhoto} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Sule Muntari</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm container spacing={2} xs={12} sx={{ alignItems: \"center\" }}>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">Medical ID:</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h5\">217878</Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm container spacing={2} xs={12} sx={{ alignItems: \"center\" }}>\r\n            <Grid item>\r\n              <Typography variant=\"h6\">Gender:</Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography\r\n                variant=\"h6\"\r\n                className={gender === \"Female\" ? classes.lightRed : classes.lightGreen}\r\n              >\r\n                {gender}\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* third grid */}\r\n\r\n        <Grid container>\r\n          <Grid item xs={5} sm={12} component=\"div\">\r\n            <Typography variant=\"h6\" color=\"text.secondary\" sx={{ padding: \"2rem 0\" }}>\r\n              File Uploads:\r\n            </Typography>\r\n          </Grid>\r\n\r\n          <Grid container>\r\n            <Grid item sm container spacing={2} className={classes.spacing}>\r\n              {imageuploadContainer.map((img, index) => {\r\n                return (\r\n                  <Grid container direction=\"row\" xs={4} key={index} sx={{ paddingBottom: \"2rem\" }}>\r\n                    {/* <Card> */}\r\n                    {/* <CardHeader\r\n                      avatar={<Avatar variant=\"square\" src={imageUpload} />}\r\n                      action={\r\n                        <IconButton aria-label=\"settings\">\r\n                          <MoreVertIcon />\r\n                        </IconButton>\r\n                      }\r\n                      title={img.text}\r\n                      subheader={(img.value, img.time)}\r\n                    /> */}\r\n\r\n                    {/* <Grid\r\n                      item\r\n                      sm\r\n                      container\r\n                      direction=\"row\"\r\n                      spacing={1}\r\n                      sx={{ justifyContent: \"center\" }}\r\n                    > */}\r\n                    <Grid item xs={3}>\r\n                      <Avatar variant=\"square\" src={imageUpload} />\r\n                    </Grid>\r\n                    <Grid item xs={7}>\r\n                      <Grid>\r\n                        <Typography variant=\"h6\">{img.text}</Typography>\r\n                      </Grid>\r\n                      <Grid item sm container direction=\"row\">\r\n                        <Typography variant=\"h6\">{img.value}</Typography>\r\n                        <Typography variant=\"h6\">{img.time}</Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={1}>\r\n                      <IconButton aria-label=\"settings\">\r\n                        <MoreVertIcon />\r\n                      </IconButton>\r\n                    </Grid>\r\n                    {/* </Grid> */}\r\n                  </Grid>\r\n                );\r\n              })}\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item sm container>\r\n          <Grid item sx={{ margin: \"auto 4rem auto auto\" }}>\r\n            <IconLabelButtons\r\n              placeholder=\"Verify HCP\"\r\n              height=\"4.8rem\"\r\n              width=\"14.2rem\"\r\n              backgroundColor=\"#ED3237\"\r\n              border=\"1rem\"\r\n              endIcon={<DoneSharpIcon />}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ViewHCP;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Patients.js",["306"],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Consultations.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\HCP.js",["307","308","309"],"import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport DownloadSharpIcon from \"@mui/icons-material/DownloadSharp\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { rows } from \"components/Utilities/DataHeader\";\r\nimport { HCPHeader } from \"components/Utilities/tableHeaders\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Plan\" },\r\n  { id: 2, value: \"Consultation\" },\r\n];\r\n\r\nconst HCP = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const buttonType = {\r\n    main: theme.palette.success.main,\r\n    light: theme.palette.success.light,\r\n    dark: theme.palette.success.dark,\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n        <Grid item className={classes.searchGrid}>\r\n          <Search\r\n            value={searchMail}\r\n            onChange={(e) => setSearchMail(e.target.value)}\r\n            placeholder=\"Enter your email here...\"\r\n            height=\"5rem\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <FilterList\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            setAnchorEl={setAnchorEl}\r\n            title=\"Filter by\"\r\n            options={options}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {/* The Search and Filter ends here */}\r\n      <Grid item container>\r\n        <EnhancedTable\r\n          headCells={HCPHeader}\r\n          rows={rows}\r\n          page={page}\r\n          paginationLabel=\"verification per page\"\r\n          hasCheckbox={true}\r\n        >\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n            const isItemSelected = isSelected(row.id, selectedRows);\r\n\r\n            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n            return (\r\n              <TableRow\r\n                hover\r\n                role=\"checkbox\"\r\n                aria-checked={isItemSelected}\r\n                tabIndex={-1}\r\n                key={row.id}\r\n                selected={isItemSelected}\r\n              >\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    onClick={() => handleSelectedRows(row.id, selectedRows, setSelectedRows)}\r\n                    color=\"primary\"\r\n                    checked={isItemSelected}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": labelId,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black }}\r\n                >\r\n                  {row.entryDate}\r\n                </TableCell>\r\n                <TableCell align=\"left\" className={classes.tableCell}>\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <span style={{ marginRight: \"1rem\" }}>\r\n                      <Avatar alt=\"Remy Sharp\" src={displayPhoto} sx={{ width: 24, height: 24 }} />\r\n                    </span>\r\n                    <span style={{ fontSize: \"1.25rem\" }}>\r\n                      {\" \"}\r\n                      {row.firstName} {row.lastName}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.red }}\r\n                >\r\n                  {row.medical}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    component={Link}\r\n                    to=\"/view\"\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                  >\r\n                    View HCP\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </EnhancedTable>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HCP;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\CaseNotes.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Medications.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\MedicalRecords.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\PatientProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Appointments.js",["310"],"import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport calendar from \"assets/images/calendar.svg\";\r\nimport { ReactComponent as ConsultationIcon } from \"assets/images/consultation.svg\";\r\nimport { ReactComponent as CalendarIcon } from \"assets/images/calendar.svg\";\r\nimport Card from \"components/Utilities/Card\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  containerGrid: {\r\n    paddingTop: \"7em\",\r\n  },\r\n\r\n  parentGrid: {\r\n    \"&.MuiGrid-item\": {\r\n      ...theme.typography.cardParentGrid,\r\n      width: \"30rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n    },\r\n  },\r\n\r\n  gridWrapper: {\r\n    ...theme.typography.cardGridWrapper,\r\n  },\r\n\r\n  iconWrapper: {\r\n    ...theme.typography.cardIconWrapper,\r\n  },\r\n}));\r\n\r\nconst Appointments = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" className={classes.containerGrid}>\r\n      <Grid item className={classes.parentGrid} style={{ marginRight: \"2em\" }} lg md={6} sm={12}>\r\n        <Card\r\n          alt=\"A calendar icon used as a representation for the waiting list\"\r\n          img={calendar}\r\n          title=\"Waiting List\"\r\n          background={theme.palette.common.lightGreen}\r\n          \r\n        >\r\n          <CalendarIcon fill={theme.palette.common.green} />\r\n        </Card>\r\n      </Grid>\r\n      <Grid item className={classes.parentGrid} style={{ marginLeft: \"2em\" }} lg md={6} sm={12}>\r\n        <Card\r\n          alt=\"An icon used as a representation for making consultation with the doctor\"\r\n          title=\"Consultation\"\r\n          background={theme.palette.common.lightRed}\r\n        >\r\n          <ConsultationIcon fill={theme.palette.common.red} />\r\n        </Card>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Appointments;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Prescriptions.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\SinglePatient.js",["311"],"import React, { useEffect } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport PersonRemoveIcon from \"@mui/icons-material/PersonRemove\";\r\nimport TrendingUpIcon from \"@mui/icons-material/TrendingUp\";\r\nimport Card from \"components/Utilities/Card\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport { ReactComponent as ConsultationIcon } from \"assets/images/consultation.svg\";\r\nimport { ReactComponent as UserIcon } from \"assets/images/user.svg\";\r\nimport { ReactComponent as PrescriptionIcon } from \"assets/images/prescription.svg\";\r\nimport AssignmentIcon from \"@mui/icons-material/Assignment\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  gridContainer: {\r\n    paddingBottom: \"20rem\",\r\n  },\r\n\r\n  gridsWrapper: {\r\n    background: \"#fff\",\r\n    borderRadius: \"2rem\",\r\n    padding: \"4rem\",\r\n  },\r\n\r\n  parentGrid: {\r\n    textDecoration: \"none\",\r\n    color: theme.palette.primary.main,\r\n    \"&.MuiGrid-item\": {\r\n      ...theme.typography.cardParentGrid,\r\n      minWidth: \"20rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n    },\r\n  },\r\n\r\n  icon: {\r\n    \"&.css-1o5jd4y-MuiSvgIcon-root\": {\r\n      fontSize: \"4rem\",\r\n    },\r\n  },\r\n}));\r\nconst SinglePatient = ({ setSelectedMenu }) => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { patientId } = useParams();\r\n\r\n  useEffect(() => {\r\n    setSelectedMenu(1);\r\n  }, []);\r\n\r\n  const cards1 = [\r\n    {\r\n      id: 0,\r\n      title: \"Patient Profile\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"profile\",\r\n      icon: UserIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    {\r\n      id: 1,\r\n      title: \"Consultations\",\r\n      background: theme.palette.common.lightGreen,\r\n      path: \"consultations\",\r\n      icon: ConsultationIcon,\r\n      fill: theme.palette.common.green,\r\n    },\r\n    {\r\n      id: 2,\r\n      title: \"Prescriptions\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"prescriptions\",\r\n      icon: PrescriptionIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n  ];\r\n\r\n  const cards2 = [\r\n    {\r\n      id: 3,\r\n      title: \"Medical Records\",\r\n      background: theme.palette.common.lightGreen,\r\n      path: \"records\",\r\n      icon: AssignmentIcon,\r\n      fill: theme.palette.common.green,\r\n    },\r\n    {\r\n      id: 4,\r\n      title: \"Case notes\",\r\n      background: theme.palette.common.lightRed,\r\n      path: \"case-notes\",\r\n      icon: UserIcon,\r\n      fill: theme.palette.common.red,\r\n    },\r\n    {\r\n      id: 5,\r\n      title: \"Medications\",\r\n      background: theme.palette.common.lightGreen,\r\n      path: \"medications\",\r\n      icon: UserIcon,\r\n      fill: theme.palette.common.green,\r\n    },\r\n  ];\r\n\r\n  const trasparentButton = {\r\n    background: \"transparent\",\r\n    hover: \"#fafafa\",\r\n    active: \"#f4f4f4\",\r\n  };\r\n\r\n  const greenButton = {\r\n    background: theme.palette.success.main,\r\n    hover: theme.palette.success.light,\r\n    active: theme.palette.success.dark,\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\" className={classes.gridContainer}>\r\n      <Grid item container justifyContent=\"space-between\" className={classes.gridsWrapper}>\r\n        {/* Display photo and profile name grid */}\r\n        <Grid item>\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item style={{ marginRight: \"2rem\" }}>\r\n              <Avatar alt={`Display Photo`} src={displayPhoto} sx={{ width: 50, height: 50 }} />\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography variant=\"h2\">Raphael Igbenedion</Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n        {/* Action Buttons grid */}\r\n        <Grid item>\r\n          <Grid container alignItems=\"center\">\r\n            <Grid item style={{ marginRight: \"2rem\" }}>\r\n              <CustomButton\r\n                endIcon={<PersonRemoveIcon />}\r\n                title=\"Disable Patient\"\r\n                type={trasparentButton}\r\n                textColor={theme.palette.common.red}\r\n              />\r\n            </Grid>\r\n            <Grid item>\r\n              <CustomButton endIcon={<TrendingUpIcon />} title=\"Refer Patient\" type={greenButton} />\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n      {/* TOP CARDS SECTION */}\r\n      <Grid item container justifyContent=\"space-between\" style={{ paddingTop: \"5rem\" }}>\r\n        {cards1.map((card) => (\r\n          <Grid\r\n            key={card.id}\r\n            item\r\n            className={classes.parentGrid}\r\n            component={Link}\r\n            to={`/patients/${patientId}/${card.path}`}\r\n          >\r\n            <Card title={card.title} background={card.background} header=\"h4\">\r\n              {React.createElement(card.icon, { fill: card.fill })}\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n      {/* BOTTOM CARDS SECTION */}\r\n      <Grid item container justifyContent=\"space-between\" style={{ paddingTop: \"5rem\" }}>\r\n        {cards2.map((card) => (\r\n          <Grid\r\n            key={card.id}\r\n            item\r\n            className={classes.parentGrid}\r\n            component={Link}\r\n            to={`/patients/${patientId}/${card.path}`}\r\n          >\r\n            <Card title={card.title} background={card.background} header=\"h4\">\r\n              {React.createElement(card.icon, {\r\n                fill: card.fill,\r\n                color: card.id === 3 ? \"success\" : undefined,\r\n                style: { fontSize: \"4rem\" },\r\n              })}\r\n            </Card>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nSinglePatient.propTypes = {\r\n  setSelectedMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SinglePatient;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\HeaderProfile.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\helpers\\isSelected.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\helpers\\selectedRows.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\EnhancedTable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\CustomButton.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\tableHeaders.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Texts.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\hooks\\useActions.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Search.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\FilterList.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\DataHeader.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Card.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\PreviousButton.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\modals\\ReferPatient.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\EnhancedTableToolbar.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\EnhancedTableHeader.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\FormSelect.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\action-creators\\index.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\tableData.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\store\\action-creators\\tablesActions.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Button.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\DataGrid.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\WaitingListTable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\AvailabilityTable.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\layouts\\DashboardChart.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Filter.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Email.js",["312","313","314"],"import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport DownloadSharpIcon from \"@mui/icons-material/DownloadSharp\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { columns, rows } from \"components/Utilities/DataHeader\";\r\nimport { emailHeader } from \"components/Utilities/tableHeaders\";\r\nimport Chip from \"@mui/material/Chip\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Plan\" },\r\n  { id: 2, value: \"Consultation\" },\r\n];\r\n\r\nconst Email = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const buttonType = {\r\n    main: theme.palette.success.main,\r\n    light: theme.palette.success.light,\r\n    dark: theme.palette.success.dark,\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n        <Grid item className={classes.searchGrid}>\r\n          <Search\r\n            value={searchMail}\r\n            onChange={(e) => setSearchMail(e.target.value)}\r\n            placeholder=\"Enter your email here...\"\r\n            height=\"5rem\"\r\n          />\r\n        </Grid>\r\n        <Grid item sx={{ marginRight: \"2rem\" }}>\r\n          <FilterList\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            setAnchorEl={setAnchorEl}\r\n            title=\"Filter by\"\r\n            options={options}\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <CustomButton endIcon={<DownloadSharpIcon />} title=\"Download email\" type={buttonType} />\r\n        </Grid>\r\n      </Grid>\r\n      {/* The Search and Filter ends here */}\r\n      <Grid item container>\r\n        <EnhancedTable\r\n          headCells={emailHeader}\r\n          rows={rows}\r\n          page={page}\r\n          paginationLabel=\"email per page\"\r\n          hasCheckbox={true}\r\n        >\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n            const isItemSelected = isSelected(row.id, selectedRows);\r\n\r\n            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n            return (\r\n              <TableRow\r\n                hover\r\n                role=\"checkbox\"\r\n                aria-checked={isItemSelected}\r\n                tabIndex={-1}\r\n                key={row.id}\r\n                selected={isItemSelected}\r\n              >\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    onClick={() => handleSelectedRows(row.id, selectedRows, setSelectedRows)}\r\n                    color=\"primary\"\r\n                    checked={isItemSelected}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": labelId,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black }}\r\n                >\r\n                  {row.entryDate}\r\n                </TableCell>\r\n                <TableCell align=\"left\" className={classes.tableCell}>\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <span style={{ marginRight: \"1rem\" }}>\r\n                      <Avatar alt=\"Remy Sharp\" src={displayPhoto} sx={{ width: 24, height: 24 }} />\r\n                    </span>\r\n                    <span style={{ fontSize: \"1.25rem\" }}>\r\n                      {row.firstName} {row.lastName}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.red }}\r\n                >\r\n                  {row.category}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tableCell}>\r\n                  <Chip\r\n                    label={row.email}\r\n                    variant=\"outlined\"\r\n                    className={classes.badge}\r\n                    style={{\r\n                      background: theme.palette.common.white,\r\n                      color: theme.palette.common.green,\r\n                      fontSize: \"1.25rem\",\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </EnhancedTable>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\MainFinanceTab.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\DateComponent.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\CircularProgress.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Payout.js",["315","316","317","318","319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345"],"import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport DownloadSharpIcon from \"@mui/icons-material/DownloadSharp\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\n\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { rows } from \"components/Utilities/DataHeader\";\r\nimport { payoutHeader } from \"components/Utilities/tableHeaders\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport { H1 } from \"components/Utilities/Texts\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Plan\" },\r\n  { id: 2, value: \"Consultation\" },\r\n];\r\n\r\nconst Payout = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const buttonType = {\r\n    main: theme.palette.success.main,\r\n    light: theme.palette.success.light,\r\n    dark: theme.palette.success.dark,\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n      <H1 fontSize=\"3.2rem\" color=\"#4F4F4F\" style={{ marginRight: \"1rem\" }}>\r\n          Payout table\r\n\r\n        </H1>\r\n      </Grid>\r\n      {/* The Search and Filter ends here */}\r\n      <Grid item container>\r\n        <EnhancedTable\r\n          headCells={payoutHeader}\r\n          rows={rows}\r\n          page={page}\r\n          paginationLabel=\"payout per page\"\r\n          hasCheckbox={true}\r\n        >\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n            const isItemSelected = isSelected(row.id, selectedRows);\r\n\r\n            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n            return (\r\n              <TableRow\r\n                hover\r\n                role=\"checkbox\"\r\n                aria-checked={isItemSelected}\r\n                tabIndex={-1}\r\n                key={row.id}\r\n                selected={isItemSelected}\r\n              >\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    onClick={() => handleSelectedRows(row.id, selectedRows, setSelectedRows)}\r\n                    color=\"primary\"\r\n                    checked={isItemSelected}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": labelId,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black }}\r\n                >\r\n                  {row.entryDate}\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black,  }}\r\n                >\r\n                  {row.time}\r\n                </TableCell>\r\n                   <TableCell align=\"center\" className={classes.tableCell}>\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                  \r\n                    }}\r\n                  >\r\n                    <span style={{ marginRight: \"1rem\" }}>\r\n                      <Avatar alt=\"Remy Sharp\" src={displayPhoto} sx={{ width: 24, height: 24 }} />\r\n                    </span>\r\n                    <span style={{ fontSize: \"1.25rem\" }}>\r\n                      {row.firstName} {row.lastName}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tableCell}>\r\n                  {row.medical}\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.red }}\r\n                >\r\n                  {row.amount}\r\n                </TableCell>\r\n                 <TableCell align=\"center\" className={classes.tableCell}>\r\n                    <Chip\r\n                      label={row.status}\r\n                      className={classes.badge}\r\n                      style={{\r\n                        background:\r\n                          row.status === \"active\"\r\n                            ? theme.palette.common.lightGreen\r\n                            : theme.palette.common.lightRed,\r\n                        color:\r\n                          row.status === \"active\"\r\n                            ? theme.palette.common.green\r\n                            : theme.palette.common.red,\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </EnhancedTable>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Payout;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\ReferralTab.js",["346","347"],"import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport DownloadSharpIcon from \"@mui/icons-material/DownloadSharp\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { rows } from \"components/Utilities/DataHeader\";\r\nimport { referralHeader } from \"components/Utilities/tableHeaders\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport Chip from \"@mui/material/Chip\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"10rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Plan\" },\r\n  { id: 2, value: \"Consultation\" },\r\n];\r\n\r\nconst ReferralTab = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n        <Grid item className={classes.searchGrid}>\r\n          <Search\r\n            value={searchMail}\r\n            onChange={(e) => setSearchMail(e.target.value)}\r\n            placeholder=\"Type to search referrals...\"\r\n            height=\"5rem\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <FilterList\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            setAnchorEl={setAnchorEl}\r\n            title=\"Filter by\"\r\n            options={options}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {/* The Search and Filter ends here */}\r\n      <Grid item container>\r\n        <EnhancedTable\r\n          headCells={referralHeader}\r\n          rows={rows}\r\n          page={page}\r\n          paginationLabel=\"referral per page\"\r\n          hasCheckbox={true}\r\n        >\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n            const isItemSelected = isSelected(row.id, selectedRows);\r\n\r\n            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n            return (\r\n              <TableRow\r\n                hover\r\n                role=\"checkbox\"\r\n                aria-checked={isItemSelected}\r\n                tabIndex={-1}\r\n                key={row.id}\r\n                selected={isItemSelected}\r\n              >\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    onClick={() => handleSelectedRows(row.id, selectedRows, setSelectedRows)}\r\n                    color=\"primary\"\r\n                    checked={isItemSelected}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": labelId,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black }}\r\n                >\r\n                  {row.entryDate}\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"left\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black }}\r\n                >\r\n                  {row.time}\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tableCell}>\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <span style={{ marginRight: \"1rem\" }}>\r\n                      <Avatar alt=\"Remy Sharp\" src={displayPhoto} sx={{ width: 24, height: 24 }} />\r\n                    </span>\r\n                    <span style={{ fontSize: \"1.25rem\" }}>\r\n                      {row.firstName} {row.lastName}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.black }}\r\n                >\r\n                  {row.specialization}\r\n                </TableCell>\r\n                <TableCell align=\"left\" className={classes.tableCell}>\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                    }}\r\n                  >\r\n                    <span style={{ marginRight: \"1rem\" }}>\r\n                      <Avatar alt=\"Remy Sharp\" src={displayPhoto} sx={{ width: 24, height: 24 }} />\r\n                    </span>\r\n                    <span style={{ fontSize: \"1.25rem\" }}>\r\n                      {row.firstName} {row.lastName}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell align=\"center\" className={classes.tableCell}>\r\n                  <Chip\r\n                    label={row.status}\r\n                    className={classes.badge}\r\n                    style={{\r\n                      background:\r\n                        row.status === \"active\"\r\n                          ? theme.palette.common.lightGreen\r\n                          : theme.palette.common.lightRed,\r\n                      color:\r\n                        row.status === \"active\"\r\n                          ? theme.palette.common.green\r\n                          : theme.palette.common.red,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    component={Link}\r\n                    to=\"/view\"\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                  >\r\n                    View referral\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </EnhancedTable>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ReferralTab;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Subscription.js",["348","349","350"],"import React, { useState } from \"react\";\r\nimport { Grid, Typography } from \"@mui/material\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { rows } from \"components/Utilities/DataHeader\";\r\nimport { subscriptionHeader } from \"components/Utilities/tableHeaders\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport CustomButton from \"components/Utilities/CustomButton\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport DeleteForeverIcon from \"@mui/icons-material/DeleteForever\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport Modals from \"components/Utilities/Modal\";\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport InputAdornment from \"@mui/material/InputAdornment\";\r\n\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"15rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n  redBtn: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: theme.palette.common.lightRed,\r\n      color: theme.palette.common.red,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.error.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  greenBtn: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: theme.palette.common.lightGreen,\r\n      color: theme.palette.common.green,\r\n\r\n      \"&:hover\": {\r\n        background: theme.palette.success.light,\r\n        color: \"#fff\",\r\n      },\r\n    },\r\n  },\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n    modal: {\r\n      background: \"red !important\",\r\n      \"& > * \": {\r\n        padding: \"2rem 1rem\",\r\n      },\r\n    },\r\n    \".css-11lq3yg-MuiGrid-root\": {\r\n      background: \"red\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Plan\" },\r\n  { id: 2, value: \"Consultation\" },\r\n];\r\n\r\nconst Subscription = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const handleDialogOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n  const handleDialogClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const buttonType = {\r\n    main: theme.palette.error.main,\r\n    light: theme.palette.error.light,\r\n    dark: theme.palette.error.dark,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid container direction=\"column\">\r\n        <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n          <Grid item className={classes.searchGrid}>\r\n            <Search\r\n              value={searchMail}\r\n              onChange={(e) => setSearchMail(e.target.value)}\r\n              placeholder=\"Type to search plans...\"\r\n              height=\"5rem\"\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item>\r\n            <CustomButton\r\n              endIcon={<AddIcon />}\r\n              title=\"Create new plan\"\r\n              type={buttonType}\r\n              onClick={handleDialogOpen}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n        {/* The Search and Filter ends here */}\r\n        <Grid item container>\r\n          <EnhancedTable\r\n            headCells={subscriptionHeader}\r\n            rows={rows}\r\n            page={page}\r\n            paginationLabel=\"subscription per page\"\r\n            hasCheckbox={true}\r\n          >\r\n            {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n              const isItemSelected = isSelected(row.id, selectedRows);\r\n\r\n              const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n              return (\r\n                <TableRow\r\n                  hover\r\n                  role=\"checkbox\"\r\n                  aria-checked={isItemSelected}\r\n                  tabIndex={-1}\r\n                  key={row.id}\r\n                  selected={isItemSelected}\r\n                >\r\n                  <TableCell padding=\"checkbox\">\r\n                    <Checkbox\r\n                      onClick={() => handleSelectedRows(row.id, selectedRows, setSelectedRows)}\r\n                      color=\"primary\"\r\n                      checked={isItemSelected}\r\n                      inputProps={{\r\n                        \"aria-labelledby\": labelId,\r\n                      }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell\r\n                    id={labelId}\r\n                    scope=\"row\"\r\n                    align=\"center\"\r\n                    className={classes.tableCell}\r\n                    style={{ color: theme.palette.common.black }}\r\n                  >\r\n                    {row.planName}\r\n                  </TableCell>\r\n                  <TableCell\r\n                    id={labelId}\r\n                    scope=\"row\"\r\n                    align=\"left\"\r\n                    className={classes.tableCell}\r\n                    style={{ color: theme.palette.common.red }}\r\n                  >\r\n                    {row.amount}\r\n                  </TableCell>\r\n\r\n                  <TableCell\r\n                    align=\"center\"\r\n                    className={classes.tableCell}\r\n                    style={{ color: theme.palette.common.black }}\r\n                  >\r\n                    {row.description}\r\n                  </TableCell>\r\n\r\n                  <TableCell align=\"left\" className={classes.tableCell}>\r\n                    <div\r\n                      style={{\r\n                        height: \"100%\",\r\n                        display: \"flex\",\r\n                        alignItems: \"center\",\r\n                        justifyContent: \"space-around\",\r\n                      }}\r\n                    >\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        disableRipple\r\n                        className={`${classes.button} ${classes.greenBtn}`}\r\n                        endIcon={<EditIcon style={{ color: theme.palette.common.green }} />}\r\n                      >\r\n                        Edit plan\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        disableRipple\r\n                        className={`${classes.button} ${classes.redBtn}`}\r\n                        to=\"/view\"\r\n                        endIcon={<DeleteForeverIcon style={{ color: theme.palette.common.red }} />}\r\n                      >\r\n                        Delete plan\r\n                      </Button>\r\n                    </div>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </EnhancedTable>\r\n        </Grid>\r\n      </Grid>\r\n      {/* // modal */}\r\n      <Modals isOpen={isOpen} handleClose={handleDialogClose}>\r\n        <Grid container className={classes.modal}>\r\n          <Grid item>\r\n            <Typography variant=\"h3\">Create new plan</Typography>\r\n          </Grid>\r\n          <Grid item container spacing={2} xs={{ flexDirection: \"row\", alignItems: \"center\" }}>\r\n            <Grid item sx={5} style={{ margin: \"2rem 0\" }}>\r\n              <FormControl style={{ maxWidth: \"100%\" }}>\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">name of Plan</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-amount\"\r\n                  placeholder=\"Enter Plan Name\"\r\n                  // startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                  label=\"Amount\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={6} style={{ margin: \"2rem 0\" }}>\r\n              <FormControl fullWidth>\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">Category</InputLabel>\r\n                <OutlinedInput\r\n                  id=\"outlined-adornment-amount\"\r\n                  placeholder=\"Enter Amount\"\r\n                  startAdornment={\r\n                    <InputAdornment\r\n                      sx={{\r\n                        color: \"red\",\r\n                        //theme.palette.common.red,\r\n                        background: theme.palette.common.lightRed,\r\n                      }}\r\n                      position=\"start\"\r\n                    >\r\n                      ₦\r\n                    </InputAdornment>\r\n                  }\r\n                  label=\"Amount\"\r\n                />\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              id=\"outlined-multiline-static\"\r\n              label=\"Plan Description\"\r\n              multiline\r\n              placeholder=\"Type Plan description\"\r\n              rows={4}\r\n              style={{ width: \"100%\", height: \"4%\" }}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={12} style={{ marginTop: \"2rem \" }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              // className={classes.button}\r\n              to=\"/view\"\r\n              type=\"submit\"\r\n              color=\"error\"\r\n              style={{ width: \"100%\" }}\r\n            >\r\n              Save Plan\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Modals>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Subscription;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\Utilities\\Modal.js",[],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\ViewReferral.js",["351"],"import React, { useState } from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport Search from \"components/Utilities/Search\";\r\nimport FilterList from \"components/Utilities/FilterList\";\r\nimport EnhancedTable from \"components/layouts/EnhancedTable\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport { rows } from \"components/Utilities/DataHeader\";\r\nimport { viewRefferalHeader } from \"components/Utilities/tableHeaders\";\r\nimport Avatar from \"@mui/material/Avatar\";\r\nimport ArrowForwardIosIcon from \"@mui/icons-material/ArrowForwardIos\";\r\nimport displayPhoto from \"assets/images/avatar.png\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useActions } from \"components/hooks/useActions\";\r\nimport { handleSelectedRows } from \"helpers/selectedRows\";\r\nimport { isSelected } from \"helpers/isSelected\";\r\nimport { Chip } from \"@mui/material\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  searchGrid: {\r\n    \"&.css-13i4rnv-MuiGrid-root\": {\r\n      flex: 1,\r\n      marginRight: \"5rem\",\r\n    },\r\n  },\r\n  button: {\r\n    \"&.css-1zf5oc-MuiButtonBase-root-MuiButton-root\": {\r\n      background: \"#fff\",\r\n      color: theme.palette.common.grey,\r\n      textTransform: \"none\",\r\n      borderRadius: \"2rem\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      padding: \"1rem\",\r\n      maxWidth: \"13rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon>*:nth-of-type(1)\": {\r\n        fontSize: \"1.2rem\",\r\n      },\r\n\r\n      \"& .css-9tj150-MuiButton-endIcon\": {\r\n        marginLeft: \".3rem\",\r\n        marginTop: \"-.2rem\",\r\n      },\r\n    },\r\n  },\r\n\r\n  tableCell: {\r\n    \"&.css-1jilxo7-MuiTableCell-root\": {\r\n      fontSize: \"1.25rem\",\r\n    },\r\n  },\r\n\r\n  badge: {\r\n    \"&.css-1eelh6y-MuiChip-root\": {\r\n      fontSize: \"1.6rem !important\",\r\n      height: \"3rem\",\r\n      borderRadius: \"1.3rem\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst options = [\r\n  { id: 0, value: \"Name\" },\r\n  { id: 1, value: \"Plan\" },\r\n  { id: 2, value: \"Consultation\" },\r\n];\r\n\r\nconst ViewReferral = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n\r\n  const { rowsPerPage, selectedRows, page } = useSelector((state) => state.tables);\r\n  const { setSelectedRows } = useActions();\r\n\r\n  const [searchMail, setSearchMail] = useState(\"\");\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const open = Boolean(anchorEl);\r\n\r\n  const buttonType = {\r\n    main: theme.palette.success.main,\r\n    light: theme.palette.success.light,\r\n    dark: theme.palette.success.dark,\r\n  };\r\n\r\n  return (\r\n    <Grid container direction=\"column\">\r\n      <Grid item container style={{ paddingBottom: \"5rem\" }}>\r\n        <Grid item className={classes.searchGrid}>\r\n          <Search\r\n            value={searchMail}\r\n            onChange={(e) => setSearchMail(e.target.value)}\r\n            placeholder=\"Enter your email here...\"\r\n            height=\"5rem\"\r\n          />\r\n        </Grid>\r\n        <Grid item>\r\n          <FilterList\r\n            onClick={(event) => setAnchorEl(event.currentTarget)}\r\n            open={open}\r\n            anchorEl={anchorEl}\r\n            setAnchorEl={setAnchorEl}\r\n            title=\"Filter by\"\r\n            options={options}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n      {/* The Search and Filter ends here */}\r\n      <Grid item container>\r\n        <EnhancedTable\r\n          headCells={viewRefferalHeader}\r\n          rows={rows}\r\n          page={page}\r\n          paginationLabel=\"referral per page\"\r\n          hasCheckbox={true}\r\n        >\r\n          {rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => {\r\n            const isItemSelected = isSelected(row.id, selectedRows);\r\n\r\n            const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n            return (\r\n              <TableRow\r\n                hover\r\n                role=\"checkbox\"\r\n                aria-checked={isItemSelected}\r\n                tabIndex={-1}\r\n                key={row.id}\r\n                selected={isItemSelected}\r\n              >\r\n                <TableCell padding=\"checkbox\">\r\n                  <Checkbox\r\n                    onClick={() => handleSelectedRows(row.id, selectedRows, setSelectedRows)}\r\n                    color=\"primary\"\r\n                    checked={isItemSelected}\r\n                    inputProps={{\r\n                      \"aria-labelledby\": labelId,\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n\r\n                <TableCell align=\"center\" className={classes.tableCell}>\r\n                  <div\r\n                    style={{\r\n                      height: \"100%\",\r\n                      display: \"flex\",\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"flex-start\",\r\n                    }}\r\n                  >\r\n                    <span style={{ marginRight: \"1rem\" }}>\r\n                      <Avatar alt=\"Remy Sharp\" src={displayPhoto} sx={{ width: 24, height: 24 }} />\r\n                    </span>\r\n                    <span style={{ fontSize: \"1.25rem\" }}>\r\n                      {\" \"}\r\n                      {row.firstName} {row.lastName}\r\n                    </span>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  style={{ color: theme.palette.common.red }}\r\n                >\r\n                  {row.specialization}\r\n                </TableCell>\r\n                <TableCell\r\n                  id={labelId}\r\n                  scope=\"row\"\r\n                  align=\"center\"\r\n                  className={classes.tableCell}\r\n                  color=\"secondary\"\r\n                  style={{ color: theme.palette.common.grey }}\r\n                >\r\n                  {row.availableTime}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <Chip\r\n                    label=\"send referral request\"\r\n                    className={classes.badge}\r\n                    style={{\r\n                      background:\r\n                        row.status === \"active\"\r\n                          ? theme.palette.common.lightGreen\r\n                          : theme.palette.common.lightRed,\r\n                      color:\r\n                        row.status === \"active\"\r\n                          ? theme.palette.common.green\r\n                          : theme.palette.common.red,\r\n                      border: \"none\",\r\n                    }}\r\n                    variant=\"outlined\"\r\n                  />\r\n                </TableCell>\r\n\r\n                <TableCell>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    className={classes.button}\r\n                    to=\"/view\"\r\n                    endIcon={<ArrowForwardIosIcon />}\r\n                  >\r\n                    View HCP profile\r\n                  </Button>\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </EnhancedTable>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ViewReferral;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Settings.js",["352"],"import React from \"react\";\r\nimport Grid from \"@mui/material/Grid\";\r\n// import GroupsIcon from \"assets/images/calendar.svg\";\r\nimport { ReactComponent as Administrator } from \"assets/images/administrator.svg\";\r\nimport { ReactComponent as CalendarIcon } from \"assets/images/calendar.svg\";\r\nimport Card from \"components/Utilities/Card\";\r\nimport { makeStyles } from \"@mui/styles\";\r\nimport { useTheme } from \"@mui/material/styles\";\r\nimport GroupsIcon from \"@mui/icons-material/Groups\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  containerGrid: {\r\n    paddingTop: \"7em\",\r\n  },\r\n\r\n  parentGrid: {\r\n    \"&.MuiGrid-item\": {\r\n      ...theme.typography.cardParentGrid,\r\n      width: \"30rem\",\r\n\r\n      \"&:hover\": {\r\n        background: \"#fcfcfc\",\r\n      },\r\n\r\n      \"&:active\": {\r\n        background: \"#fafafa\",\r\n      },\r\n    },\r\n  },\r\n\r\n  gridWrapper: {\r\n    ...theme.typography.cardGridWrapper,\r\n  },\r\n\r\n  iconWrapper: {\r\n    ...theme.typography.cardIconWrapper,\r\n  },\r\n}));\r\n\r\nconst Settings = () => {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  return (\r\n    <Grid container justifyContent=\"space-between\" className={classes.containerGrid}>\r\n      <Grid item className={classes.parentGrid} style={{ marginRight: \"2em\" }} lg md={6} sm={12}>\r\n        <Link to=\"/settings/administrator\" style={{ textDecoration: \"none\" }}>\r\n          <Card\r\n            alt=\"A administrator icon used as a representation for the administrator \"\r\n            title=\"Administrator\"\r\n            background={theme.palette.common.lightGreen}\r\n          >\r\n            <Administrator fill={theme.palette.common.green} />\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n      <Grid item className={classes.parentGrid} style={{ marginLeft: \"2em\" }} lg md={6} sm={12}>\r\n        <Link to=\"/settings/management\" style={{ textDecoration: \"none\" }}>\r\n          <Card\r\n            alt=\"An icon used as a representation for making consultation with the doctor\"\r\n            title=\"Role Management\"\r\n            background={theme.palette.common.lightRed}\r\n          >\r\n            <CalendarIcon fill={theme.palette.common.red} />\r\n          </Card>\r\n        </Link>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Administrator.js",["353","354","355"],"C:\\Users\\Abdulahi\\Desktop\\new work\\new project\\DProject\\src\\components\\pages\\Management.js",["356","357","358","359"],{"ruleId":"360","severity":1,"message":"361","line":10,"column":1,"nodeType":null,"messageId":"362","endLine":11,"endColumn":1,"fix":"363"},{"ruleId":"364","severity":1,"message":"365","line":140,"column":6,"nodeType":"366","endLine":140,"endColumn":37,"suggestions":"367"},{"ruleId":"368","severity":1,"message":"369","line":6,"column":8,"nodeType":"370","messageId":"371","endLine":6,"endColumn":25},{"ruleId":"368","severity":1,"message":"372","line":7,"column":8,"nodeType":"370","messageId":"371","endLine":7,"endColumn":14},{"ruleId":"368","severity":1,"message":"373","line":8,"column":8,"nodeType":"370","messageId":"371","endLine":8,"endColumn":18},{"ruleId":"368","severity":1,"message":"374","line":22,"column":8,"nodeType":"370","messageId":"371","endLine":22,"endColumn":20},{"ruleId":"368","severity":1,"message":"375","line":76,"column":7,"nodeType":"370","messageId":"371","endLine":76,"endColumn":14},{"ruleId":"368","severity":1,"message":"376","line":89,"column":10,"nodeType":"370","messageId":"371","endLine":89,"endColumn":20},{"ruleId":"368","severity":1,"message":"377","line":89,"column":22,"nodeType":"370","messageId":"371","endLine":89,"endColumn":35},{"ruleId":"368","severity":1,"message":"378","line":90,"column":20,"nodeType":"370","messageId":"371","endLine":90,"endColumn":31},{"ruleId":"368","severity":1,"message":"379","line":91,"column":9,"nodeType":"370","messageId":"371","endLine":91,"endColumn":13},{"ruleId":"368","severity":1,"message":"380","line":93,"column":9,"nodeType":"370","messageId":"371","endLine":93,"endColumn":19},{"ruleId":"360","severity":1,"message":"381","line":102,"column":7,"nodeType":null,"messageId":"382","endLine":102,"endColumn":7,"fix":"383"},{"ruleId":"360","severity":1,"message":"384","line":153,"column":61,"nodeType":null,"messageId":"362","endLine":153,"endColumn":63,"fix":"385"},{"ruleId":"360","severity":1,"message":"386","line":157,"column":1,"nodeType":null,"messageId":"362","endLine":157,"endColumn":4,"fix":"387"},{"ruleId":"360","severity":1,"message":"388","line":162,"column":44,"nodeType":null,"messageId":"362","endLine":163,"endColumn":19,"fix":"389"},{"ruleId":"368","severity":1,"message":"390","line":1,"column":10,"nodeType":"370","messageId":"371","endLine":1,"endColumn":16},{"ruleId":"368","severity":1,"message":"391","line":2,"column":10,"nodeType":"370","messageId":"371","endLine":2,"endColumn":13},{"ruleId":"368","severity":1,"message":"392","line":8,"column":10,"nodeType":"370","messageId":"371","endLine":8,"endColumn":16},{"ruleId":"368","severity":1,"message":"393","line":9,"column":8,"nodeType":"370","messageId":"371","endLine":9,"endColumn":13},{"ruleId":"368","severity":1,"message":"394","line":12,"column":8,"nodeType":"370","messageId":"371","endLine":12,"endColumn":16},{"ruleId":"368","severity":1,"message":"395","line":16,"column":8,"nodeType":"370","messageId":"371","endLine":16,"endColumn":12},{"ruleId":"368","severity":1,"message":"396","line":17,"column":8,"nodeType":"370","messageId":"371","endLine":17,"endColumn":18},{"ruleId":"368","severity":1,"message":"397","line":18,"column":8,"nodeType":"370","messageId":"371","endLine":18,"endColumn":19},{"ruleId":"368","severity":1,"message":"398","line":100,"column":9,"nodeType":"370","messageId":"371","endLine":100,"endColumn":14},{"ruleId":"368","severity":1,"message":"399","line":91,"column":11,"nodeType":"370","messageId":"371","endLine":91,"endColumn":20},{"ruleId":"368","severity":1,"message":"369","line":6,"column":8,"nodeType":"370","messageId":"371","endLine":6,"endColumn":25},{"ruleId":"368","severity":1,"message":"374","line":23,"column":8,"nodeType":"370","messageId":"371","endLine":23,"endColumn":20},{"ruleId":"368","severity":1,"message":"380","line":94,"column":9,"nodeType":"370","messageId":"371","endLine":94,"endColumn":19},{"ruleId":"360","severity":1,"message":"400","line":50,"column":9,"nodeType":null,"messageId":"362","endLine":51,"endColumn":9,"fix":"401"},{"ruleId":"364","severity":1,"message":"402","line":61,"column":6,"nodeType":"366","endLine":61,"endColumn":8,"suggestions":"403"},{"ruleId":"368","severity":1,"message":"404","line":12,"column":10,"nodeType":"370","messageId":"371","endLine":12,"endColumn":17},{"ruleId":"368","severity":1,"message":"405","line":16,"column":8,"nodeType":"370","messageId":"371","endLine":16,"endColumn":27},{"ruleId":"368","severity":1,"message":"406","line":18,"column":10,"nodeType":"370","messageId":"371","endLine":18,"endColumn":14},{"ruleId":"368","severity":1,"message":"369","line":6,"column":8,"nodeType":"370","messageId":"371","endLine":6,"endColumn":25},{"ruleId":"368","severity":1,"message":"372","line":7,"column":8,"nodeType":"370","messageId":"371","endLine":7,"endColumn":14},{"ruleId":"368","severity":1,"message":"373","line":8,"column":8,"nodeType":"370","messageId":"371","endLine":8,"endColumn":18},{"ruleId":"368","severity":1,"message":"374","line":22,"column":8,"nodeType":"370","messageId":"371","endLine":22,"endColumn":20},{"ruleId":"368","severity":1,"message":"375","line":77,"column":7,"nodeType":"370","messageId":"371","endLine":77,"endColumn":14},{"ruleId":"368","severity":1,"message":"376","line":90,"column":10,"nodeType":"370","messageId":"371","endLine":90,"endColumn":20},{"ruleId":"368","severity":1,"message":"377","line":90,"column":22,"nodeType":"370","messageId":"371","endLine":90,"endColumn":35},{"ruleId":"368","severity":1,"message":"378","line":91,"column":20,"nodeType":"370","messageId":"371","endLine":91,"endColumn":31},{"ruleId":"368","severity":1,"message":"379","line":92,"column":9,"nodeType":"370","messageId":"371","endLine":92,"endColumn":13},{"ruleId":"368","severity":1,"message":"380","line":94,"column":9,"nodeType":"370","messageId":"371","endLine":94,"endColumn":19},{"ruleId":"360","severity":1,"message":"381","line":103,"column":7,"nodeType":null,"messageId":"382","endLine":103,"endColumn":7,"fix":"407"},{"ruleId":"360","severity":1,"message":"361","line":104,"column":23,"nodeType":null,"messageId":"362","endLine":105,"endColumn":1,"fix":"408"},{"ruleId":"360","severity":1,"message":"384","line":155,"column":61,"nodeType":null,"messageId":"362","endLine":155,"endColumn":63,"fix":"409"},{"ruleId":"360","severity":1,"message":"386","line":159,"column":1,"nodeType":null,"messageId":"362","endLine":159,"endColumn":4,"fix":"410"},{"ruleId":"360","severity":1,"message":"388","line":164,"column":44,"nodeType":null,"messageId":"362","endLine":165,"endColumn":19,"fix":"411"},{"ruleId":"360","severity":1,"message":"412","line":186,"column":1,"nodeType":null,"messageId":"362","endLine":186,"endColumn":2,"fix":"413"},{"ruleId":"360","severity":1,"message":"414","line":187,"column":19,"nodeType":null,"messageId":"362","endLine":187,"endColumn":21,"fix":"415"},{"ruleId":"360","severity":1,"message":"414","line":188,"column":1,"nodeType":null,"messageId":"362","endLine":188,"endColumn":3,"fix":"416"},{"ruleId":"360","severity":1,"message":"414","line":189,"column":21,"nodeType":null,"messageId":"362","endLine":189,"endColumn":23,"fix":"417"},{"ruleId":"360","severity":1,"message":"414","line":190,"column":1,"nodeType":null,"messageId":"362","endLine":190,"endColumn":3,"fix":"418"},{"ruleId":"360","severity":1,"message":"414","line":191,"column":23,"nodeType":null,"messageId":"362","endLine":191,"endColumn":25,"fix":"419"},{"ruleId":"360","severity":1,"message":"414","line":192,"column":1,"nodeType":null,"messageId":"362","endLine":192,"endColumn":3,"fix":"420"},{"ruleId":"360","severity":1,"message":"414","line":193,"column":27,"nodeType":null,"messageId":"362","endLine":193,"endColumn":29,"fix":"421"},{"ruleId":"360","severity":1,"message":"422","line":194,"column":1,"nodeType":null,"messageId":"423","endLine":194,"endColumn":29,"fix":"424"},{"ruleId":"360","severity":1,"message":"414","line":195,"column":23,"nodeType":null,"messageId":"362","endLine":195,"endColumn":25,"fix":"425"},{"ruleId":"360","severity":1,"message":"426","line":196,"column":1,"nodeType":null,"messageId":"423","endLine":196,"endColumn":27,"fix":"427"},{"ruleId":"360","severity":1,"message":"414","line":197,"column":1,"nodeType":null,"messageId":"362","endLine":197,"endColumn":3,"fix":"428"},{"ruleId":"360","severity":1,"message":"422","line":198,"column":1,"nodeType":null,"messageId":"423","endLine":198,"endColumn":29,"fix":"429"},{"ruleId":"360","severity":1,"message":"414","line":199,"column":21,"nodeType":null,"messageId":"362","endLine":199,"endColumn":23,"fix":"430"},{"ruleId":"360","severity":1,"message":"414","line":200,"column":1,"nodeType":null,"messageId":"362","endLine":200,"endColumn":3,"fix":"431"},{"ruleId":"360","severity":1,"message":"414","line":201,"column":1,"nodeType":null,"messageId":"362","endLine":201,"endColumn":3,"fix":"432"},{"ruleId":"368","severity":1,"message":"369","line":6,"column":8,"nodeType":"370","messageId":"371","endLine":6,"endColumn":25},{"ruleId":"368","severity":1,"message":"374","line":23,"column":8,"nodeType":"370","messageId":"371","endLine":23,"endColumn":20},{"ruleId":"368","severity":1,"message":"375","line":113,"column":7,"nodeType":"370","messageId":"371","endLine":113,"endColumn":14},{"ruleId":"368","severity":1,"message":"378","line":135,"column":20,"nodeType":"370","messageId":"371","endLine":135,"endColumn":31},{"ruleId":"368","severity":1,"message":"379","line":136,"column":9,"nodeType":"370","messageId":"371","endLine":136,"endColumn":13},{"ruleId":"368","severity":1,"message":"380","line":92,"column":9,"nodeType":"370","messageId":"371","endLine":92,"endColumn":19},{"ruleId":"368","severity":1,"message":"433","line":9,"column":8,"nodeType":"370","messageId":"371","endLine":9,"endColumn":18},{"ruleId":"368","severity":1,"message":"406","line":17,"column":10,"nodeType":"370","messageId":"371","endLine":17,"endColumn":14},{"ruleId":"368","severity":1,"message":"374","line":22,"column":8,"nodeType":"370","messageId":"371","endLine":22,"endColumn":20},{"ruleId":"368","severity":1,"message":"434","line":23,"column":8,"nodeType":"370","messageId":"371","endLine":23,"endColumn":12},{"ruleId":"368","severity":1,"message":"435","line":26,"column":8,"nodeType":"370","messageId":"371","endLine":26,"endColumn":22},{"ruleId":"368","severity":1,"message":"375","line":119,"column":7,"nodeType":"370","messageId":"371","endLine":119,"endColumn":14},{"ruleId":"368","severity":1,"message":"378","line":141,"column":20,"nodeType":"370","messageId":"371","endLine":141,"endColumn":31},{"ruleId":"368","severity":1,"message":"379","line":142,"column":9,"nodeType":"370","messageId":"371","endLine":142,"endColumn":13},"prettier/prettier","Delete `␍⏎`","delete",{"range":"436","text":"437"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'location.pathname' and 'patientId'. Either include them or remove the dependency array.","ArrayExpression",["438"],"no-unused-vars","'DownloadSharpIcon' is defined but never used.","Identifier","unusedVar","'Search' is defined but never used.","'FilterList' is defined but never used.","'CustomButton' is defined but never used.","'options' is assigned a value but never used.","'searchMail' is assigned a value but never used.","'setSearchMail' is assigned a value but never used.","'setAnchorEl' is assigned a value but never used.","'open' is assigned a value but never used.","'buttonType' is assigned a value but never used.","Insert `··`","insert",{"range":"439","text":"440"},"Delete `,·`",{"range":"441","text":"437"},"Delete `···`",{"range":"442","text":"437"},"Delete `␍⏎··················`",{"range":"443","text":"437"},"'AppBar' is defined but never used.","'Box' is defined but never used.","'styled' is defined but never used.","'Paper' is defined but never used.","'threeDot' is defined but never used.","'Card' is defined but never used.","'CardHeader' is defined but never used.","'CardContent' is defined but never used.","'theme' is assigned a value but never used.","'patientId' is assigned a value but never used.","Delete `··␍⏎········`",{"range":"444","text":"437"},"React Hook useEffect has a missing dependency: 'setSelectedMenu'. Either include it or remove the dependency array. If 'setSelectedMenu' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["445"],"'columns' is defined but never used.","'ArrowForwardIosIcon' is defined but never used.","'Link' is defined but never used.",{"range":"446","text":"440"},{"range":"447","text":"437"},{"range":"448","text":"437"},{"range":"449","text":"437"},{"range":"450","text":"437"},"Delete `·`",{"range":"451","text":"437"},"Delete `··`",{"range":"452","text":"437"},{"range":"453","text":"437"},{"range":"454","text":"437"},{"range":"455","text":"437"},{"range":"456","text":"437"},{"range":"457","text":"437"},{"range":"458","text":"437"},"Replace `····························` with `··························`","replace",{"range":"459","text":"460"},{"range":"461","text":"437"},"Replace `··························` with `························`",{"range":"462","text":"463"},{"range":"464","text":"437"},{"range":"465","text":"460"},{"range":"466","text":"437"},{"range":"467","text":"437"},{"range":"468","text":"437"},"'GroupsIcon' is defined but never used.","'Chip' is defined but never used.","'InputAdornment' is defined but never used.",[380,382],"",{"desc":"469","fix":"470"},[2958,2958],"  ",[4837,4839],[4923,4926],[5176,5196],[1422,1434],{"desc":"471","fix":"472"},[2991,2991],[3085,3087],[4868,4870],[4954,4957],[5207,5227],[6055,6056],[6148,6150],[6157,6159],[6219,6221],[6248,6250],[6302,6304],[6317,6319],[6394,6396],[6431,6459],"                          ",[6515,6517],[6525,6551],"                        ",[6576,6578],[6634,6662],[6711,6713],[6717,6719],[6741,6743],"Update the dependencies array to be: [location.pathname, patientId, selectedMenu, setSelectedMenu]",{"range":"473","text":"474"},"Update the dependencies array to be: [setSelectedMenu]",{"range":"475","text":"476"},[3327,3358],"[location.pathname, patientId, selectedMenu, setSelectedMenu]",[1787,1789],"[setSelectedMenu]"]